#!/bin/bash
# Pomodoro timer
# Author : TheWatermelon

pomodoro_file=/tmp/tomato_timer
icon_empty=
icon_load=(  )
load_index=0

new_tomato()
(
	if [[ $# -eq 0 ]]; then
		# No argument : start pomodoro
		if [[ -f /tmp/tomato_timer ]]; then
			# Reading active status and pomodoro duration from file
			read active sec < $pomodoro_file
			remaining=0
			for i in `seq $sec`; do
				if [[ $active -eq 1 ]]; then
					# Pomodoro in progress
					sleep 1 &
					remaining=$(( sec - i ))
					printf "%s [%02d:%02d]" ${icon_load[load_index]} $(( remaining/60 )) $(( remaining%60 ))
					echo 
					load_index=$(( (load_index + 1) % 3 ))
					wait
				elif [[ $active -eq 0 ]]; then
					# Pomodoro in pause
					while [[ $active -eq 0 ]]; do
						read active sec < $pomodoro_file
						printf "%s ([%02d:%02d])" $icon_half $(( remaining/60 )) $(( remaining%60 ))
						echo 
						sleep 1
					done
				else
					# Neither active nor in pause => quit
					break
				fi
				# Updating active status and pomodoro duration
				read active sec < $pomodoro_file
			done
			# Pomodoro is over, destructing temporary file
			rm -f $pomodoro_file
			echo $icon_empty
			# Warn the user using i3-nagbar
			i3-nagbar -t warning -m "Pomodoro's over" -b "Start 25'" 'echo "1 $(( 25 * 60 ))" > /tmp/tomato_timer' -b "Start 15'" 'echo "1 $(( 15 * 60 ))" > /tmp/tomato_timer' -b "Start 5'" 'echo "1 $(( 5 * 60 ))" > /tmp/tomato_timer' 2&>/dev/null
		else
			# No file : pomodoro icon
			echo $icon_empty
		fi
	else
		# Getting pomodoro duration from argument
		sec=$1
		sec=$(( sec * 60 ))
		if [[ -f /tmp/tomato_timer ]]; then
			# Toggling pomodoro active status and updating duration
			read active old_sec < $pomodoro_file
			echo "$(( (active + 1) % 2 )) $sec" > $pomodoro_file
		else
			# Initializing pomodoro
			echo "1 $sec" > $pomodoro_file
		fi
	fi
)

new_tomato $@
