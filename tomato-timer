#!/bin/bash
# Pomodoro timer
# Author : TheWatermelon

get_seconds()
(
	datetmp=`date +%M`
	if [[ ${datetmp:0:1} -eq 0 ]]; then
		datetmp=${datetmp:1:1}
	fi
	sec=$(( datetmp * 60 ))
	datetmp=`date +%S`
	if [[ ${datetmp:0:1} -eq 0 ]]; then
		datetmp=${datetmp:1:1}
	fi
	return $(( sec + datetmp ))
)

read_tomato()
(
	# Time argument: reading tomato time file
	read active init_time < /tmp/tomato_time
	echo $active
	if [[ $active -eq 0 ]]; then
		echo 
	else
		# Getting actual minutes and seconds converted into seconds
		get_seconds
		sec=$?
		# Elapsed time
		delta=$(( sec - init_time ))
		# Remaining time based on 25'
		tomato=$1
		tomato=$(( tomato * 60 ))
		remaining=$(( tomato - delta ))
		if [[ $remaining -le 0 ]]; then
			echo "0 0" > /tmp/tomato_timer
		else
			echo -n $(( remaining / 60 ))
			echo -n :
			echo $(( remaining % 60 ))
		fi
	fi
)

write_tomato()
(
	# No argument: writing tomato time file
	get_seconds
	sec=$?
	if [[ -f /tmp/tomato_time ]]; then
		read v1 v2 < /tmp/tomato_time
		echo "$(( (v1 + 1) % 2 )) $sec" > /tmp/tomato_time
	else
		echo "1 $sec" > /tmp/tomato_time
	fi
)

old_tomato()
(
	if [[ $# -ne 0 ]]; then
		read_tomato
	else
		write_tomato
	fi
)

new_tomato()
(
	if [[ $# -eq 0 ]]; then
		if [[ -f /tmp/tomato_timer ]]; then
			read sec < /tmp/tomato_timer
			for i in `seq $sec`; do
				remaining=$(( sec - i ))
				echo "$(( remaining/60 )):$(( remaining%60 ))"
				sleep 1
			done
			rm -f /tmp/tomato_timer
		else
			echo 
		fi
	else
		sec=$1
		sec=$(( sec * 60 ))
		echo $sec > /tmp/tomato_timer
	fi
)

new_tomato $@
