clock()
{
	[ $# -gt 0 ] && echo "Show Clock"
	while true;do
		clear;
		echo -e "\033[0;32m=============\033[0;31m";
		echo -n " "; date +"%r";
		echo -e "\033[0;32m=============\033[0;00m";
		sleep 1;
    done;
}

run()
{
    number=$1;
    shift;
    for n in $(seq $number); do
        $@
    done
}

bu()
{
	if [ "$#" -lt 1 ]; then
		echo -e "Backup a file (append date to name)"
		echo -e "${RED}usage:${BLUE} bu() <filepath>" && return;
    fi
		cp $1 ${1}-`date +%Y%m%d%H%M`.backup ;
}

extract ()
{
	if [ -f $1 ] ; then
		case $1 in
		*.tar.bz2) tar xjvf $1 ;;
		*.tar.gz) tar xzvf $1 ;;
		*.tar.xz) tar xJvf $1 ;;
		*.bz2) bunzip2 -v $1 ;;
		*.rar) unrar x $1 ;;
		*.gz) gunzip -v $1 ;;
		*.tar) tar xvf $1 ;;
		*.tbz2) tar xjvf $1 ;;
		*.tgz) tar xzvf $1 ;;
		*.zip) unzip $1 ;;
		*.Z) uncompress -v $1 ;;
		*.7z) 7z x $1 ;;
		*.arj) unarj $1 ;;
		*.lzma) unlzma -v $1 ;;
		*.lzop) tar --lzop xvf $1 ;;
		*.lzip) tar --lzip xvf $1 ;;
		*) echo -e "${red} extract() does not know the extension of ${blue}$1" ;;
		esac
		else
			echo -e "\n${red}'$1' ${RED}usage:${BLUE} extract() <archive>"
			fi
}

man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

exitstatus()
{
    if [[ $? == 0  ]]; then
        #echo -e "${BGreen}:)${NC}"
        echo 'x'
    else
        echo -e "${BRed}:(${NC}"
    fi

}

countdown()
(
	IFS=:
	set -- $*
	secs=$(( ${1#0} * 3600 + ${2#0} * 60 + ${3#0}  ))
	while [ $secs -gt 0  ]
	do
		sleep 1 &
		printf "\r%02d:%02d:%02d" $((secs/3600)) $(( (secs/60)%60 )) $((secs%60))
	secs=$(( $secs - 1  ))
		wait
	done
	echo
)
